#include <iostream> 
using namespace std;

//  Print zeroes at the end of array without counting zeros

void putZeroesAtEnd(int arr[], int size) {
	int end_ptr = size - 1;
	int i = 0;
	while (i < size)   //   iteration = size
	{
		if (i == end_ptr)    //   if index = lastindex
			break;
		if (arr[i] == 0 && arr[end_ptr] != 0)
		{
			//  swap value=0 with the value at the end of array that is not zero
			int temp = arr[i];
			arr[i] = arr[end_ptr];
			arr[end_ptr] = temp;
			end_ptr--;
			i++;
		}
		else if (arr[i] == 0 && arr[end_ptr] == 0)
			end_ptr--;
		else i++;
	}
	for (int j = 0; j < size; j++)
	{
		cout << arr[j] << " ";
	}

}

 
int main()
{
	 
	return 0;
}


***********************************************


def putZeroesAtEnd(arr):
    # Initialize the position of the first zero
    non_zero_pos = 0
    
    # Traverse the array
    for i in range(len(arr)):
        if arr[i] != 0:
            # Swap the current element with the element at non_zero_pos
            arr[i], arr[non_zero_pos] = arr[non_zero_pos], arr[i]
            # Move the non_zero_pos to the next position
            non_zero_pos += 1


# Example usage
arr = [0, 1, 0, 3, 12, 0, 4]
putZeroesAtEnd(arr)
print(arr)  # Output: [1, 3, 12, 4, 0, 0, 0]